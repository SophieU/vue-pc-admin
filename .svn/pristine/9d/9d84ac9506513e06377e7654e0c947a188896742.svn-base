<template>
  <div>
    <Card class="mb-15">
      <p slot="title">工单统计</p>
      <table class="native-table mb-15">
        <thead>
        <tr>
          <th>历史工单总数</th>
          <th>历史收益总计</th>
        </tr>
        </thead>
        <tbody>
        <tr>
          <td>{{orderTotal.totalOrderNum}}</td>
          <td>{{orderTotal.totalEarning}}</td>
        </tr>
        </tbody>
      </table>
      <table class="native-table mb-15">
        <thead>
        <tr>
          <th>本月工单总数</th>
          <th>本月收益总计</th>
        </tr>
        </thead>
        <tbody>
        <tr>
          <td>{{orderTotal.currentMonthOrderNum}}</td>
          <td>{{orderTotal.currentMonthEarning}}</td>
        </tr>
        </tbody>
      </table>
    </Card>
    <Card>
      <p slot="title">工单列表</p>
      <div class="clearfix mb-15">
        <div v-if="filterDateRange" class="pull-left">
          <span>时间：{{filterForm.startDate}}-{{filterForm.endDate}}</span>
        </div>
        <div class="pull-right">
          <Button @click="filter=true">筛选</Button>
          <Button type="primary">excel导出</Button>
        </div>
      </div>
      <div class="table-wrapper">
        <Table :columns="columns" :data="lists"></Table>
      </div>
    </Card>

    <Drawer width="425" title="收益筛选" v-model="filter">
      <div class="clearfix mb-15">
        <Button @click="clearFilter('filterForm')">清空筛选条件</Button>
        <Button @click="sureFilter" type="primary">确定</Button>
      </div>
      <Form ref="filterForm" :model="filterForm" label-position="top">
        <FormItem label="服务分类">
          <Select v-model="filterForm.repairCategoryId">
            <Option v-for="repair in repairTypeLists" :key="repair.id" :value="repair.id">{{repair.name}}</Option>
          </Select>
        </FormItem>
        <FormItem v-model="filterForm.dateRange" label="工单时间">
          <DatePicker type="daterange" style="width: 100%;"></DatePicker>
        </FormItem>
      </Form>
    </Drawer>
  </div>
</template>

<script>
  import util from '../../../libs/util'
    export default {
        name: "staff-order-income",
      data(){
          return{
            filter:false,
            id:'', //当前人员id
            orderTotal:'', //总工单数
            columns:[
              {title:'工单号',key:'id',align:'center'},
              {title:'服务类型',key:'id',align:'center'},
              {title:'创建时间',key:'id',align:'center'},
              {title:'上门费收益',key:'id',align:'center'},
              {title:'服务费收益',key:'id',align:'center'},
              {title:'辅材费收益',key:'id',align:'center'},
              {title:'收益总计',key:'id',align:'center'},
              {title:'操作',align:'center',render:(h,params)=>{
                  return h('Button',{
                    props:{
                      type:'text'
                    }
                  },'查看订单')

                }},
            ],
            lists:[],
            pageNo:1,
            pageSize:10,
            totalCount:0,
            repairTypeLists:[], //报修分类列表
            filterForm:{
              repairCategoryId:'',
              dateRange:[]
            },
            filterDateRange:[],//标记是否显示
          }
      },
      methods:{
          getRepairType(){
            util.getRepairType((data)=>{
              this.repairTypeLists=data;
            })
          },
          getLists(filter){
            let id = this.id;
            let param = `pageNo=${this.pageNo}&pageSize=${this.pageSize}`;

            this.$http.post(`/server/order/earning/list?${param}`,{
              ...filter
            }).then(res=>{
                if(res.data.code===0){
                  let data = res.data.data;
                  this.lists=data.list;
                  this.pageSize=data.pageSize;
                  this.totalCount=data.totalCount;
                  this.filter=false;
                }else{
                  console.log('工单收益列表失败：'+res.data.msg);
                }
              })
          },
          getOrderTotal(id){
            this.$http.get(`/server/order/earning/count?id=${id}`)
              .then(res=>{
                if(res.data.code===0){
                  this.orderTotal=res.data.data;
                }else{
                  console.log('工单统计信息失败：'+res.data.msg);
                }
              })
          },
        clearFilter(name){
            this.$refs[name].resetFields();
        },
        sureFilter(){
            let filterForm = this.filterForm;
            let filterParam={
              id:this.id,
              repairCategoryId:filterForm.repairCategoryId
            };
            if(filterForm.dateRange[0]&&filterForm.dateRange[1]){
              filterParam.startDate=util.formateTime(filterForm.dateRange[0],true);
              filterParam.endDate=util.formateTime(filterForm.dateRange[1],true);
            }
            this.getLists(filterParam);
        }
      },
      mounted(){
        this.id=this.$route.params.id;
        this.getOrderTotal(this.id);
      }
    }
</script>

<style scoped>

</style>
